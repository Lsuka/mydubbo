<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.unicorn</groupId>
	<artifactId>mydubbo</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<name>mydubbo</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!--路径导出 start -->
		<profiles.dir>src/main/profiles</profiles.dir>
		<resources.dir>src/main/resources</resources.dir>
		<!--路径导出 end -->
		<!--duboo start -->
		<dubbo.version>2.5.6</dubbo.version>
		<!--duboo end -->
		<!--日志组件 start -->
		<logback.version>1.2.3</logback.version>
		<org.slf4j.version>1.7.25</org.slf4j.version>
		<!--日志组件 end -->
		<!--zookeeper start -->
		<zookeeper.version>3.4.10</zookeeper.version>
		<zkclient.version>0.10</zkclient.version>
		<!--zookeeper end -->
		<!--druid start -->
		<druid.version>1.1.4</druid.version>
		<!--druid end -->
		<!--mybatis start -->
		<mybatis.version>3.4.5</mybatis.version>
		<mybatis.spring.version>1.3.1</mybatis.spring.version>
		<!--mybatis end -->
		<!--mysql start -->
		<mysql.version>5.1.29</mysql.version>
		<!--mysql end -->
		<!-- 基础环境配置 start -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
		<maven.compiler.plugin.version>3.6.0</maven.compiler.plugin.version>
		<maven.source.plugin.version>3.0.1</maven.source.plugin.version>
		<junit.version>4.12</junit.version>
		<!-- 基础环境配置 end -->
		<!--本地工具包的引入 start -->
		<mydubbo.version>0.0.1</mydubbo.version>
		<!--本地工具包的引入 end -->
		<!--spring start -->
		<spring.version>5.0.0.RELEASE</spring.version>
		<!--spring end -->
		<!--commons组件包 start -->
		<commons.beanutils.version>1.9.3</commons.beanutils.version>
		<commons.lang3.version>3.6</commons.lang3.version>
		<!--commons组件包 end -->
		<!--json start -->
		<net.sf.json.version>2.3</net.sf.json.version>
		<!--json end -->
		<!--aspectj语法引入 start -->
		<aspectj.version>1.8.12</aspectj.version>
		<!--aspectj语法引入 end -->
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<!--本地工具包的引入 start -->
			<dependency>
				<groupId>cn.unicorn</groupId>
				<artifactId>mydubbo-api</artifactId>
				<version>${mydubbo.version}</version>
			</dependency>
			<!--本地工具包的引入 end -->
			<!--Druid连接池start -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			<!--Druid连接池end -->
			<!--duboo start -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>spring</artifactId><!-- 移除依赖，有版本冲突 -->
						<groupId>org.springframework</groupId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-beans</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-web</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-aop</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-expression</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--duboo end -->
			<!--日志 start -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${org.slf4j.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${org.slf4j.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<!--日志 end -->
			<!-- mybatis 依赖 start -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis.spring.version}</version><!--MyBatis-Spring integrates 
					MyBatis seamlessly with Spring -->
			</dependency>
			<!-- mybatis 依赖 end -->
			<!-- mysql start -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!--mysql end -->
			<!--commons工具类依赖 start -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons.lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons.beanutils.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--工具类依赖 end -->
			<!--JSON start -->
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<version>${net.sf.json.version}</version>
				<classifier>jdk15</classifier>
				<scope>compile</scope>
			</dependency>
			<!--JSON end -->
			<!--集成Spring 和 spring JDBC start -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--集成Spring 和 spring JDBC end -->
			<!-- Spring AOP所要用到的包 start -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<!-- Spring AOP所要用到的包 end -->
			<!--zookeeper依赖 start -->
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zookeeper.version}</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.101tec</groupId>
				<artifactId>zkclient</artifactId>
				<version>${zkclient.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>log4j</artifactId>
						<groupId>log4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>zookeeper</artifactId>
						<groupId>org.apache.zookeeper</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!--zookeeper依赖 end -->
			<!--spring start -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!--spring end -->
		</dependencies>
	</dependencyManagement>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profile.dir>${profiles.dir}/dev</profile.dir>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>beta</id>
			<properties>
				<profile.dir>${profiles.dir}/beta</profile.dir>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>product</id>
			<properties>
				<profile.dir>${profiles.dir}/product</profile.dir>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<build>	<!-- 定义编译时的配置项 -->
		<finalName>parent</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>	<!-- 定义Maven的编译插件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${jdk.version}</source>	<!-- 定义源代码的开发版本 -->
					<target>${jdk.version}</target>	<!-- 定义生成class文件的编译版本 -->
					<encode>${project.build.sourceEncoding}</encode>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>true</useSystemClassLoader>
					<forkMode>once</forkMode>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<modules>
		<module>mydubbo-api</module>
		<module>mydubbo-provider</module>
		<module>mydubbo-service</module>
		<module>mydubbo-consumer</module>
	</modules>
</project>